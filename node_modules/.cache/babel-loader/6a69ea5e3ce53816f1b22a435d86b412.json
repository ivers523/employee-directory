{"ast":null,"code":"var _jsxFileName = \"/Users/michaeliverson/coding-bootcamp/user-directory/user-directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Title from \"./components/Title/Title\"; // import Button from \"./components/Button\"\n\nimport { users } from \"./data\";\nimport \"./App.css\"; // conversion to Class based programming w/ help of tutor\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users\n    };\n\n    this.removeUsers = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const users = this.state.users.filter(user => user.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        users\n      });\n    };\n\n    this.sortUsers = name => {\n      // Sort this.state.users by user name\n      const users = this.state.users.sort((a, b) => a.name > b.name ? 1 : -1); // Set this.state.users equal to the new users array\n\n      this.setState({\n        users\n      });\n    };\n  }\n\n  // Map over this.state.users and render a user card component for each user object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Employee Directory\"), React.createElement(\"button\", {\n      onClick: this.sortUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Sort by Name\"), this.state.users.map(user => React.createElement(EmployeeCard, {\n      removeUsers: this.removeUsers,\n      id: user.id,\n      key: user.id,\n      name: user.name,\n      department: user.department,\n      role: user.role,\n      email: user.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App; // APP renders:\n// USER DIRECTORY:\n//                    (SORT) (FILTER)\n//  \n// ID  NAME       DEPARTMENT  ROLE           EMAIL (WHAT IS THIS COMPONENT CALLED?)\n// 1   ALEXANDER  SALES       SALES MANAGER  alex@fakeemail","map":{"version":3,"sources":["/Users/michaeliverson/coding-bootcamp/user-directory/user-directory/src/App.js"],"names":["React","Component","EmployeeCard","Wrapper","Title","users","App","state","removeUsers","id","filter","user","setState","sortUsers","name","sort","a","b","render","map","department","role","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,SAAQC,KAAR,QAAoB,QAApB;AACA,OAAO,WAAP,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;;AAAA,SAM1BG,WAN0B,GAMZC,EAAE,IAChB;AACE;AACA,YAAMJ,KAAK,GAAG,KAAKE,KAAL,CAAWF,KAAX,CAAiBK,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAA5C,CAAd,CAFF,CAGE;;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAZyB;;AAAA,SAc1BQ,SAd0B,GAcdC,IAAI,IAChB;AACE;AACA,YAAMT,KAAK,GAAG,KAAKE,KAAL,CAAWF,KAAX,CAAiBU,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACF,IAAF,GAASG,CAAC,CAACH,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAzD,CAAd,CAFF,CAKE;;AACA,WAAKF,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAtByB;AAAA;;AAwB1B;AACAa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACC,MAAA,OAAO,EAAE,KAAKL,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAIG,KAAKN,KAAL,CAAWF,KAAX,CAAiBc,GAAjB,CAAqBR,IAAI,IACxB,oBAAC,YAAD;AACE,MAAA,WAAW,EAAG,KAAKH,WADrB;AAEE,MAAA,EAAE,EAAEG,IAAI,CAACF,EAFX;AAGE,MAAA,GAAG,EAAEE,IAAI,CAACF,EAHZ;AAIE,MAAA,IAAI,EAAEE,IAAI,CAACG,IAJb;AAKE,MAAA,UAAU,EAAEH,IAAI,CAACS,UALnB;AAME,MAAA,IAAI,EAAET,IAAI,CAACU,IANb;AAOE,MAAA,KAAK,EAAEV,IAAI,CAACW,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADF;AAkBD;;AA5CyB;;AA+C5B,eAAehB,GAAf,C,CAKA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard/EmployeeCard\"\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Title from \"./components/Title/Title\";\n// import Button from \"./components/Button\"\nimport {users} from \"./data\";\nimport \"./App.css\";\n\n// conversion to Class based programming w/ help of tutor\n\nclass App extends Component {\n  // Setting this.state.users to the users array\n  state = {\n    users\n  };\n\n  removeUsers = id => \n  {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const users = this.state.users.filter(user => user.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ users });\n  };\n  \n  sortUsers = name => \n  {\n    // Sort this.state.users by user name\n    const users = this.state.users.sort((a, b) => (a.name > b.name) ? 1 : -1)\n\n   \n    // Set this.state.users equal to the new users array\n    this.setState({ users });\n  };\n\n  // Map over this.state.users and render a user card component for each user object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Directory</Title>\n        <button\n         onClick={this.sortUsers}>Sort by Name</button>\n        {this.state.users.map(user => (\n          <EmployeeCard\n            removeUsers ={this.removeUsers}\n            id={user.id}\n            key={user.id}\n            name={user.name}\n            department={user.department}\n            role={user.role}\n            email={user.email}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n// APP renders:\n\n// USER DIRECTORY:\n//                    (SORT) (FILTER)\n//  \n// ID  NAME       DEPARTMENT  ROLE           EMAIL (WHAT IS THIS COMPONENT CALLED?)\n// 1   ALEXANDER  SALES       SALES MANAGER  alex@fakeemail"]},"metadata":{},"sourceType":"module"}