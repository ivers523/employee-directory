{"ast":null,"code":"var _jsxFileName = \"/Users/michaeliverson/coding-bootcamp/user-directory/user-directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Title from \"./components/Title/Title\";\nimport { users } from \"./data\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users\n    };\n  }\n\n  // removeFriend = id => \n  // {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n  // Map over this.state.users and render a user card component for each user object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Employee Directory\"), this.state.users.map(user => React.createElement(EmployeeCard // remove user ={this.remove user}\n    , {\n      id: user.id,\n      key: user.id,\n      name: user.name,\n      department: user.department,\n      role: user.role,\n      email: user.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App; // APP renders:\n// USER DIRECTORY:\n//                    (SORT) (FILTER)\n//  \n// ID  NAME       DEPARTMENT  ROLE           EMAIL (WHAT IS THIS COMPONENT CALLED?)\n// 1   ALEXANDER  SALES       SALES MANAGER  alex@fakeemail","map":{"version":3,"sources":["/Users/michaeliverson/coding-bootcamp/user-directory/user-directory/src/App.js"],"names":["React","Component","EmployeeCard","Wrapper","Title","users","App","state","render","map","user","id","name","department","role","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;AAAA;;AAM1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEG,KAAKD,KAAL,CAAWF,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IACxB,oBAAC,YAAD,CACE;AADF;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,MAAA,GAAG,EAAED,IAAI,CAACC,EAHZ;AAIE,MAAA,IAAI,EAAED,IAAI,CAACE,IAJb;AAKE,MAAA,UAAU,EAAEF,IAAI,CAACG,UALnB;AAME,MAAA,IAAI,EAAEH,IAAI,CAACI,IANb;AAOE,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAgBD;;AAhCyB;;AAmC5B,eAAeT,GAAf,C,CAKA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Title from \"./components/Title/Title\";\nimport {users} from \"./data\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the users array\n  state = {\n    users\n  };\n\n  // removeFriend = id => \n  // {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n  // Map over this.state.users and render a user card component for each user object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Directory</Title>\n        {this.state.users.map(user => (\n          <EmployeeCard\n            // remove user ={this.remove user}\n            id={user.id}\n            key={user.id}\n            name={user.name}\n            department={user.department}\n            role={user.role}\n            email={user.email}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n// APP renders:\n\n// USER DIRECTORY:\n//                    (SORT) (FILTER)\n//  \n// ID  NAME       DEPARTMENT  ROLE           EMAIL (WHAT IS THIS COMPONENT CALLED?)\n// 1   ALEXANDER  SALES       SALES MANAGER  alex@fakeemail"]},"metadata":{},"sourceType":"module"}